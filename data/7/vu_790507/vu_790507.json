{
  "Author": "This document was written by Trent Novelly.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "",
  "CVSS_AccessComplexity": "M",
  "CVSS_AccessVector": "L",
  "CVSS_Authenication": "S",
  "CVSS_AvailabilityImpact": "C",
  "CVSS_BaseScore": 6.6,
  "CVSS_BaseVector": "AV:L/AC:M/Au:S/C:C/I:C/A:C",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 3.853205790336,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:M/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "POC",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "M",
  "CVSS_TemporalScore": 5.2,
  "CVSS_TemporalVector": "E:POC/RL:OF/RC:C",
  "DateCreated": "2018-10-12T14:58:11-04:00",
  "DateFirstPublished": "2019-07-17T06:14:27-04:00",
  "DateLastUpdated": "2019-07-23T11:31:00-04:00",
  "DatePublic": "2019-07-16T00:00:00",
  "Description": "The process file system (/proc) in Oracle Solaris 11 and Solaris 10 provides a self/ alias that refers to the current executing process's PID subdirectory with state information about the process. Protection mechanisms for /proc in Solaris 11/10 did not properly restrict the current (self) process from modifying itself via /proc. For services strictly providing file IO this lack of restriction allows an attacker to modify the process providing the file IO and execute arbitrary code.",
  "ID": "VU#790507",
  "IDNumber": "790507",
  "IPProtocol": "",
  "Impact": "An authenticated attacker with read and write access to the /proc/self directory via a vulnerable service providing file IO, may be able to gain arbitrary code execution on a target host.",
  "Keywords": "",
  "Overview": "Oracle Solaris 11 and Solaris 10 are vulnerable to arbitrary code execution if an attacker has read/write access to /proc/self in the process file system.",
  "References": "https://docs.oracle.com/cd/E19253-01/816-5174/proc-4/index.html",
  "Resolution": "Apply an update\nOracle has released updates for Solaris 11 and Solaris 10 to address the vulnerability.",
  "Revision": 18,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "Thanks to the reporter who wishes to remain anonymous.",
  "Title": "Oracle Solaris vulnerable to arbitrary code execution via /proc/self",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": "Restrict access to /proc\nIn general any service providing file IO remotely should have its access to /proc restricted. This can be achieved by correctly chrooting the shared environment."
}