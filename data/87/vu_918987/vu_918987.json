{
  "Author": "This document was written by Madison Oliver.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2019-9506",
  "CVSS_AccessComplexity": "L",
  "CVSS_AccessVector": "A",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "N",
  "CVSS_BaseScore": 7.8,
  "CVSS_BaseVector": "AV:A/AC:L/Au:N/C:C/I:C/A:N",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "C",
  "CVSS_EnvironmentalScore": 7.76999137152,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:ND/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "ND",
  "CVSS_IntegrityImpact": "C",
  "CVSS_RemediationLevel": "ND",
  "CVSS_ReportConfidence": "ND",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "ND",
  "CVSS_TemporalScore": 7.8,
  "CVSS_TemporalVector": "E:ND/RL:ND/RC:ND",
  "DateCreated": "2018-11-01T10:48:37-04:00",
  "DateFirstPublished": "2019-08-14T09:17:17-04:00",
  "DateLastUpdated": "2020-05-15T11:09:00-04:00",
  "DatePublic": "2019-08-14T00:00:00",
  "Description": "Bluetooth is a short-range wireless technology based off of a core specification that defines six different core configurations, including the Bluetooth Basic Rate / Enhanced Data Rate Core Configurations. Bluetooth BR/EDR is used for low-power short-range communications. To establish an encrypted connection, two Bluetooth devices must pair with each other and establish a link key that is used to generate the encryption key. For example, assume that there are two controllers attempting to establish a connection: Alice and Bob. After authenticating the link key, Alice proposes that she and Bob use 16 bytes of entropy. This number, N, could be between 1 and 16 bytes. Bob can either accept this, reject this and abort the negotiation, or propose a smaller value. Bob may wish to propose a smaller N value because he (the controller) does not support the larger amount of bytes proposed by Alice. After proposing a smaller amount, Alice can accept it and request to activate link-layer encryption with Bob, which Bob can accept. An attacker, Charlie, could force Alice and Bob to use a smaller N by intercepting Alice's proposal request to Bob and changing N. Charlie could lower N to as low as 1 byte, which Bob would subsequently accept since Bob supports 1 byte of entropy and it is within the range of the compliant values. Charlie could then intercept Bob's acceptance message to Alice and change the entropy proposal to 1 byte, which Alice would likely accept, because she may believe that Bob cannot support a larger N. Thus, both Alice and Bob would accept N and inform the Bluetooth hosts that encryption is active, without acknowledging or realizing that N is lower than either of them initially intended it to be.",
  "ID": "VU#918987",
  "IDNumber": "918987",
  "IPProtocol": "",
  "Impact": "An unauthenticated, adjacent attacker can force two Bluetooth devices to use as low as 1 byte of entropy. This would make it easier for an attacker to brute force as it reduces the total number of possible keys to try, and would give them the ability to decrypt all of the traffic between the devices during that session.",
  "Keywords": [
    "Bluetooth",
    "KNOB"
  ],
  "Overview": "The encryption key length negotiation process in Bluetooth BR/EDR Core v5.1 and earlier is vulnerable to packet injection by an unauthenticated, adjacent attacker that could result in information disclosure and/or escalation of privileges. This can be achieved using an attack referred to as the Key Negotiation of Bluetooth (KNOB) attack, which is when a third party forces two or more victims to agree on an encryption key with as little as one byte of entropy. Once the entropy is reduced, the attacker can brute-force the encryption key and use it to decrypt communications.",
  "References": [
    "https://www.bluetooth.com/specifications/adopted-specifications",
    "https://www.bluetooth.com/security/statement-key-negotiation-of-bluetooth",
    "https://www.usenix.org/system/files/sec19-antonioli.pdf",
    "https://www.icasi.org/br-edr-encryption-key-bluetooth-vulnerability/",
    "https://github.com/francozappa/knob"
  ],
  "Resolution": "Bluetooth host and controller suppliers should refer to the Bluetooth SIG's \"Expedited Errata Correction 11838\" for guidance on updating their products. Downstream vendors should refer to their suppliers for updates.",
  "Revision": 81,
  "SystemsAffectedPreamble": "These issues exist due to the specification, which has been corrected.",
  "ThanksAndCredit": "Thanks to Daniele Antonioli for reporting this vulnerability.",
  "Title": "Bluetooth BR/EDR supported devices are vulnerable to key negotiation attacks",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "",
  "VRDA_D1_Population": "",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}