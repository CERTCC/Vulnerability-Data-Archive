{
  "Addendum": "There are no additional comments at this time.",
  "DateLastUpdated": "2020-01-14T14:24:00-05:00",
  "DateNotified": "2019-10-04T10:57:57-04:00",
  "DateResponded": "",
  "ID": "VU#335217",
  "Revision": 5,
  "Status": "Affected",
  "Vendor": "Amazon",
  "VendorInformation": "We are not aware of further vendor information regarding this vulnerability.",
  "VendorRecordID": "CHEU-BGMKM9",
  "VendorReferences": "https://aws.amazon.com/compliance/shared-responsibility-model\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html \nhttps://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html",
  "VendorStatement": "Amazon acknowledges the HTTP Cache Poisoning issue and see this as part of  AWS's shared security responsibility model with Amazon's customers. CloudFront follows the standards defined in RFC 7234 when defining cache keys, which are used to  identify cached content. Customers are further able to specify the headers that CloudFront considers when caching objects The issue described needs to be addressed using CloudFront distribution configuration. Customers can also use AWS Web Application Firewall (WAF) to deploy Access Control Lists (ACLs) in front of their CloudFront distributions, which adds a layer of defense to CloudFront distributions by defining which traffic will be permitted to reach the associated distribution"
}