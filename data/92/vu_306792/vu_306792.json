{
  "Author": "This document was written by Will Dormann.",
  "CAM_AttackerAccessRequired": "0",
  "CAM_EaseOfExploitation": "0",
  "CAM_Exploitation": "0",
  "CAM_Impact": "0",
  "CAM_InternetInfrastructure": "0",
  "CAM_Population": "0",
  "CAM_ScoreCurrent": 0,
  "CAM_ScoreCurrentWidelyKnown": 0,
  "CAM_ScoreCurrentWidelyKnownExploited": 0,
  "CAM_WidelyKnown": "0",
  "CERTAdvisory": "",
  "CVEIDs": "CVE-2018-5382 ",
  "CVSS_AccessComplexity": "L",
  "CVSS_AccessVector": "L",
  "CVSS_Authenication": "N",
  "CVSS_AvailabilityImpact": "N",
  "CVSS_BaseScore": 2.1,
  "CVSS_BaseVector": "AV:L/AC:L/Au:N/C:N/I:P/A:N",
  "CVSS_CollateralDamagePotential": "ND",
  "CVSS_ConfidentialityImpact": "N",
  "CVSS_EnvironmentalScore": 1.7467596596016,
  "CVSS_EnvironmentalVector": "CDP:ND/TD:H/CR:ND/IR:ND/AR:ND",
  "CVSS_Exploitability": "F",
  "CVSS_IntegrityImpact": "P",
  "CVSS_RemediationLevel": "OF",
  "CVSS_ReportConfidence": "C",
  "CVSS_SecurityRequirementsAR": "ND",
  "CVSS_SecurityRequirementsCR": "ND",
  "CVSS_SecurityRequirementsIR": "ND",
  "CVSS_TargetDistribution": "H",
  "CVSS_TemporalScore": 1.7,
  "CVSS_TemporalVector": "E:F/RL:OF/RC:C",
  "DateCreated": "2018-03-08T13:48:19-05:00",
  "DateFirstPublished": "2018-03-19T07:35:47-04:00",
  "DateLastUpdated": "2018-04-04T11:28:00-04:00",
  "DatePublic": "2012-03-20T00:00:00",
  "Description": "Bouncy Castle is a cryptographic library for C# and Java applications, including Android applications. BKS is a keystore format, which is designed to function similarly to a Sun/Oracle JKS keystore. BKS files can contain public keys, including certificates, as well as private keys. BKS files rely on password-based encryption to provide confidentiality and integrity protections to the keystore contents. The first version of a BKS file contains a design flaw in the determination of the key size used to protect the data inside of the keystore. A SHA-1 hash function, which is 160 bits in length, is used in the BKS HMAC code. In a RFC7292-compliant cryptographic algorithm, the MAC key size is the same size as the hash function being used. This means that the MAC key size should be 160 bits long for BKS files. However, the Bouncy Castle code for version 1 BKS files uses only 16 bits for the MAC key size. This means that regardless of password complexity, a BKS version 1 file can only have 65,536 different encryption keys. A valid password for a keystore can be bruteforced by attempting each of these key values, which can take only seconds. Update March 21, 2018: Keystore-level passwords (and associated keys) are used for keystore integrity verification only. Like JKS files, BKS files do not employ container-level encryption. This means that the metadata for BKS file contents is visible without needing to know a password at all. The actual private keys in a BKS file are protected as expected with the password that the author has specified. Starting with Bouncy Castle 1.47, which was released on March 30, 2012, the BKS keystore format was updated to version 2, which uses a 160-bit MAC. Starting with Bouncy Castle 1.49, optional support for the original keystore format was reintroduced, as \"BKS-V1.\"",
  "ID": "VU#306792",
  "IDNumber": "306792",
  "IPProtocol": "",
  "Impact": "A BKS file that was created with Bouncy Castle 1.46 or earlier, or 1.49 or later as the \"BKS-V1\" format will have insufficient protection against bruteforce cracking. This may allow an attacker bypass BKS integrity checking.",
  "Keywords": [
    "BKS",
    "bouncycastle"
  ],
  "Overview": "Bouncy Castle BKS version 1 keystore files use an HMAC that is only 16 bits long, which can allow an attacker to compromise the integrity of a BKS-V1 keystore.",
  "References": [
    "https://www.bouncycastle.org/releasenotes.html",
    "https://cryptosense.com/blog/bouncycastle-keystore-security/",
    "https://tools.ietf.org/html/rfc7292#appendix-A"
  ],
  "Resolution": "Do not rely on version 1 BKS keystore files BKS version 1 keystore files are not cryptographically sound. A more robust keystore format should be used instead.",
  "Revision": 20,
  "SystemsAffectedPreamble": "",
  "ThanksAndCredit": "This vulnerability was reported by Will Dormann of the CERT/CC.",
  "Title": "Bouncy Castle BKS-V1 keystore files vulnerable to trivial hash collisions",
  "US-CERTTechnicalAlert": "",
  "VRDA_D1_DirectReport": "1",
  "VRDA_D1_Impact": "3",
  "VRDA_D1_Population": "4",
  "VulnerabilityCount": 1,
  "Workarounds": ""
}